name: Rust
on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check code format
        run: cargo fmt --all -- --check
  check:
    name: Check (${{ matrix.rust-toolchain }}, ${{ matrix.target }})
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - beta
          - nightly
        target:
          - "x86_64-unknown-linux-gnu"
          - "aarch64-unknown-linux-gnu"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust-toolchain }}
    - name: Setup cache for cargo
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-${{ matrix.rust-toolchain }}
    - name: Install cross-compilation target
      run: rustup target add ${{ matrix.target }}
    - name: Check code
      run: cargo check --target ${{ matrix.target }}
      env: 
        PYO3_CROSS_PYTHON_VERSION: "3.11"
  test:
    name: Test (${{ matrix.rust-toolchain }}, ${{ matrix.cpu }})
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - beta
          - nightly
        cpu:
          - "native"
          - "x86-64"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust-toolchain }}
    - name: Setup cache for cargo
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-${{ matrix.rust-toolchain }}
    - name: Test code
      run: cargo test
  cover:
    name: Coverage (${{ matrix.cpu }})
    runs-on: ubuntu-latest
    needs: test
    if: "!startsWith(github.ref, 'refs/tags/v')"
    strategy:
      matrix:
        cpu:
          - "native"
          - "x86-64"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust stable
      uses: dtolnay/rust-toolchain@stable
    - name: Setup cache for cargo
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-${{ matrix.rust-toolchain }}
    - name: Measure code coverage on CPU ${{ matrix.cpu }}
      uses: actions-rs/tarpaulin@v0.1
      with:
        env: RUSTFLAGS="--target-cpu=${{ matrix.cpu }}"
        version: '0.19.0'
        args: '-v --out Xml --ciserver github-actions'
    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: ${{ matrix.cpu }}
        env_vars: OS
        name: test-${{ matrix.cpu }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        codecov_curl_args: "--globoff"
        verbose: true
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'post') && !contains(github.ref, 'alpha')"
    environment: Crates.io
    name: Publish crates
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: dtolnay/rust-toolchain@stable
    - name: Package and publish lightmotif
      run: cargo publish -p lightmotif --token ${{ secrets.CRATES_IO_TOKEN }}
    - name: Package and publish lightmotif-io
      run: cargo publish -p lightmotif-io --token ${{ secrets.CRATES_IO_TOKEN }}
    - name: Package and publish lightmotif-tfmpvalue
      run: cargo publish -p lightmotif-tfmpvalue --token ${{ secrets.CRATES_IO_TOKEN }}
    - name: Package and publish lightmotif-py
      run: cargo publish -p lightmotif-py --token ${{ secrets.CRATES_IO_TOKEN }}
  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'post') && !contains(github.ref, 'alpha')"
    name: Release
    needs: publish
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: rasmus-saks/release-a-changelog-action@v1.2.0
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
