# https://gist.github.com/althonos/6914b896789d3f2078d1e6237642c35c

# --- Setuptools metadata ---------------------------------------------------

[metadata]
name = lightmotif
author = Martin Larralde
version = attr: lightmotif.__version__
author_email = martin.larralde@embl.de
home_page = https://github.com/althonos/lightmotif
description = PyO3 bindings and Python interface to lightmotif, a library for platform-accelerated biological motif scanning using position weight matrices.
long_description = file: lightmotif-py/README.md
long_description_content_type = text/markdown
license = MIT
platform = any
keywords = bioinformatics, genomics, motif, pssm, matrix
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Rust
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Software Development :: Libraries :: Python Modules
    # Typing :: Typed
project_urls =
    Bug Tracker = https://github.com/althonos/lightmotif/issues
    Changelog = https://github.com/althonos/lightmotif/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/lightmotif/
    Builds = https://github.com/althonos/lightmotif/actions/
    PyPI = https://pypi.org/project/lightmotif

[options]
zip_safe = true
packages =
    lightmotif
    lightmotif.avx2
    lightmotif.tests
test_suite = lightmotif.tests
python_requires = >=3.7
setup_requires =
    setuptools >=39.2
    setuptools-rust >=1.0

[options.package_data]
lightmotif =
    py.typed
    *.pyi
    *.py
lightmotif.lib =
    *.rs
lightmotif.tests =
    *.rs
    requirements.txt

[bdist_wheel]
universal = false

[build_rust]
release = true


# --- Python tools configuration --------------------------------------------

[coverage:report]
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise UnexpectedError
    raise AllocationError

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true

[mypy-lightmotif.tests.*]
ignore_errors = True
